name: Java CI with Gradle

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  ECS_CLUSTER_NAME: hsj-cluster
  ECS_CONTAINER_NAME: hsj-container
  ECS_SERVICE_NAME: hsj-service
  TASK_DEFINITION_NAME: hsj-task-def.json
  REGISTRY: ${{ secrets.REGISTRY }}
  REPOSITORY: ${{ secrets.REPOSITORY }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - run : ls -al

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: 'gradle'

      - name: set security-yml
        run: |
          echo "${{ secrets.APPLICATION_SECURITY_YML }}" | base64 --decode > api-module/src/main/resources/application-security.yml

      - name: set db-yml
        run: |
          echo "${{ secrets.APPLICATION_DB_YML }}" | base64 --decode > domain-quiz-module/src/main/resources/application-db.yml

      - name: set task-def.json
        run: |
          echo "${{ secrets.TASK_DEF_JSON }}" | base64 --decode >> aws/hsj-task-def.json

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      - name: build with Gradle Wrapper
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.REGION }}
          role-to-assume: ${{ secrets.ROLE }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build, push to ecr
        id: build-image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest . 
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest

      - name: Render Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: aws/hsj-task-def.json
          container-name: ${{ env.ECS_CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
          environment-variables: "LOG_LEVEL=info"

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE_NAME }}
          cluster: ${{ env.ECS_CLUSTER_NAME }}

